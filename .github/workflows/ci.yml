name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18, 20, 21]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: false

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Type check
        run: |
          # Type check shared packages
          pnpm --filter "@sucoza/devtools-common" typecheck
          pnpm --filter "@sucoza/plugin-core" typecheck  
          pnpm --filter "@sucoza/shared-components" typecheck
          pnpm --filter "@sucoza/devtools-importer" typecheck

      - name: Lint
        run: |
          # Lint shared packages
          pnpm --filter "@sucoza/devtools-common" lint
          pnpm --filter "@sucoza/plugin-core" lint
          pnpm --filter "@sucoza/shared-components" lint  
          pnpm --filter "@sucoza/devtools-importer" lint

      - name: Build shared packages
        run: |
          pnpm --filter "@sucoza/devtools-common" build
          pnpm --filter "@sucoza/plugin-core" build
          pnpm --filter "@sucoza/shared-components" build
          pnpm --filter "@sucoza/devtools-importer" build

      - name: Test shared packages
        run: |
          pnpm --filter "@sucoza/devtools-common" test || echo "No tests for devtools-common"
          pnpm --filter "@sucoza/plugin-core" test || echo "No tests for plugin-core"
          pnpm --filter "@sucoza/shared-components" test || echo "No tests for shared-components"

  build-plugins:
    name: Build & Test Plugins
    runs-on: ubuntu-latest
    needs: test
    strategy:
      matrix:
        plugin: [
          '@sucoza/accessibility-devtools-plugin',
          '@sucoza/api-mock-interceptor-devtools-plugin', 
          '@sucoza/auth-permissions-mock-devtools-plugin',
          '@sucoza/browser-automation-test-recorder-devtools-plugin',
          '@sucoza/bundle-impact-analyzer-devtools-plugin',
          '@sucoza/design-system-inspector-devtools-plugin',
          '@sucoza/error-boundary-visualizer-devtools-plugin',
          '@sucoza/feature-flag-manager-devtools-plugin',
          '@sucoza/form-state-inspector-devtools-plugin',
          '@sucoza/graphql-devtools-plugin',
          '@sucoza/i18n-devtools-plugin',
          '@sucoza/logger-devtools-plugin',
          '@sucoza/memory-performance-profiler-devtools-plugin',
          '@sucoza/render-waste-detector-devtools-plugin',
          '@sucoza/router-devtools-plugin',
          '@sucoza/security-audit-panel-devtools-plugin',
          '@sucoza/stress-testing-devtools-plugin',
          '@sucoza/visual-regression-monitor-devtools-plugin',
          '@sucoza/websocket-signalr-devtools-plugin',
          '@sucoza/zustand-devtools-plugin'
        ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build shared packages first
        run: |
          pnpm --filter "@sucoza/devtools-common" build
          pnpm --filter "@sucoza/plugin-core" build
          pnpm --filter "@sucoza/shared-components" build
          pnpm --filter "@sucoza/devtools-importer" build

      - name: Type check plugin
        run: pnpm --filter "${{ matrix.plugin }}" typecheck

      - name: Lint plugin
        run: pnpm --filter "${{ matrix.plugin }}" lint

      - name: Build plugin
        run: pnpm --filter "${{ matrix.plugin }}" build

      - name: Test plugin
        run: pnpm --filter "${{ matrix.plugin }}" test || echo "No tests for ${{ matrix.plugin }}"

  build-matrix:
    name: Full Build Matrix
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [18, 20]

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: false

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build all packages
        run: |
          pnpm --filter "@sucoza/devtools-common" build
          pnpm --filter "@sucoza/plugin-core" build
          pnpm --filter "@sucoza/shared-components" build
          pnpm --filter "@sucoza/devtools-importer" build

      - name: Build sample plugins
        run: |
          pnpm --filter "@sucoza/api-mock-interceptor-devtools-plugin" build
          pnpm --filter "@sucoza/memory-performance-profiler-devtools-plugin" build
          pnpm --filter "@sucoza/browser-automation-test-recorder-devtools-plugin" build

  security:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run security audit
        run: pnpm audit --audit-level moderate

      - name: Check for known vulnerabilities
        run: npx audit-ci --moderate