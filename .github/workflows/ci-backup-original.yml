name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  NX_CLOUD_DISTRIBUTED_EXECUTION: true
  NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_CLOUD_ACCESS_TOKEN }}
  NX_BRANCH: ${{ github.event.number || github.ref_name }}
  NX_CLOUD_DISTRIBUTED_EXECUTION_AGENT_COUNT: 4

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  main:
    name: Nx Cloud - Main Job
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18, 20, 21]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          # Fetch full history for affected commands
          fetch-depth: 0

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: false

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Initialize the Nx Cloud distributed CI run
        run: npx nx-cloud start-ci-run --distribute-on="4 linux-medium-js" --stop-agents-after="build"

      - name: Run type checking on affected projects
        run: npx nx affected -t typecheck --parallel=3

      - name: Run linting on affected projects
        run: npx nx affected -t lint --parallel=3

      - name: Run tests on affected projects
        run: npx nx affected -t test --parallel=3 --coverage.enabled

      - name: Build affected projects
        run: npx nx affected -t build --parallel=3

      - name: Stop Nx Cloud DTE agents
        if: always()
        run: npx nx-cloud stop-all-agents

  agents:
    name: Nx Cloud - Agent
    runs-on: ubuntu-latest
    strategy:
      matrix:
        agent: [1, 2, 3, 4]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Start Nx Agent ${{ matrix.agent }}
        run: npx nx-cloud start-agent
        env:
          NX_AGENT_NAME: ${{ matrix.agent }}

  matrix:
    name: Cross-Platform Build Matrix  
    runs-on: ${{ matrix.os }}
    needs: main
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [18, 20]

    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: false

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build affected projects on ${{ matrix.os }}
        run: npx nx affected -t build --parallel=2
        env:
          NX_CLOUD_DISTRIBUTED_EXECUTION: false

  security:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run security audit
        run: pnpm audit --audit-level moderate

      - name: Check for known vulnerabilities
        run: npx audit-ci --moderate
        continue-on-error: true